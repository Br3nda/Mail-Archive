<?php
// $Id: mailarchive.install,v 1.12.4.3.2.1 2010/01/01 01:32:16 Jeremy Exp $

/**
 * Mailarchive module database schema.
 * Copyright (c) 2007-2009 Jeremy Andrews <jeremy@tag1consulting.com>.
 * All rights reserved.
 */
// TODO: Convert to schemaAPI
function mailarchive_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
    default:
       // Mailing list subscriptions are stored as nodes.
      db_query("CREATE TABLE {mailarchive_subscriptions} (
        sid int(11) UNSIGNED AUTO_INCREMENT,
        nid int(11) UNSIGNED UNIQUE NOT NULL DEFAULT '0',
        created int(11) UNSIGNED NOT NULL DEFAULT '0',
        urlname varchar(255) NOT NULL DEFAULT '',
        server_name varchar(255) NOT NULL DEFAULT '',
        server_username varchar(255) NOT NULL DEFAULT '',
        server_password varchar(255) NOT NULL DEFAULT '',
        mailbox varchar(255) NOT NULL DEFAULT '',
        protocol int(2) UNSIGNED NOT NULL DEFAULT '0',
        port int(5) UNSIGNED NOT NULL DEFAULT '0',
        delete_read int(1) UNSIGNED NOT NULL DEFAULT '0',
        message_count int(11) UNSIGNED NOT NULL DEFAULT '0',
        last_message int(11) UNSIGNED NOT NULL DEFAULT '0',
        last_attempt int(11) UNSIGNED NOT NULL DEFAULT '0',
        subscription_status int(1) UNSIGNED NOT NULL DEFAULT '0',
        dedicated_table int(1) UNSIGNED NOT NULL DEFAULT '0',
        PRIMARY KEY (sid),
        KEY last_message (last_message),
        KEY urlname (urlname),
        KEY message_count (message_count)
      );");
  }
}

/**
 * Cleanly uninstall the mailarchive module.
 */
function mailarchive_uninstall() {
  $result = db_query('SELECT nid, sid FROM {mailarchive_subscriptions}');
  while ($subscription = db_fetch_object($result)) {
    node_delete($subscription->nid);
  }

  db_query('DROP TABLE {mailarchive_subscriptions}');
  drupal_set_message(t('Dropped table mailarchive_subscriptions.'));

  db_query('DELETE FROM {variable} WHERE name LIKE "mailarchive_%"');
  // Flush cache so if we re-install we're not using stale variables.
  db_query('DELETE FROM {cache}');
}

