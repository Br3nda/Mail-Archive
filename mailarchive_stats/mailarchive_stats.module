<?php

/**
 * @file
 * Counts how often mail archive messages are viewed.
 * Copyright (c) 2007.
 *   Jeremy Andrews <jeremy@kerneltrap.org>.  All rights reserved.
 */

/**
 * Implementation of Drupal's hook_exit();
 * Counts each time a mailarchive message is viewed.  Information is stored
 * with an hourly granularity, allowing things like "most popular message
 * today", "most popular message this year", etc...  Also allows for graphing
 * the popularity of individual messages or entire mailing lists.
 */
function mailarchive_stats_exit() {
  drupal_bootstrap(DRUPAL_BOOTSTRAP_PATH);
  // We only care about mailarchive pages.
  if (arg(0) == 'mailarchive') {
    // We only count when viewing a message.
    if (is_numeric(arg(2)) && is_numeric(arg(3)) && is_numeric(arg(4)) &&
        is_numeric(arg(5))) {
      // If a real view, the $sid is already cached in a static so this costs
      // nothing in the typical case.
      if ($sid = _mailarchive_sid(arg(1))) {
        // We don't need to validate that $mid exists in $sid, as this is done
        // by the mailarchive_view module.  If $mid is not valid for $sid we
        // would have hit a drupal_goto() before we got to this _exit() code.
        $mid = arg(5);
        // Calculate once, as we may use this data multiple times below.
        $now = time();
        $date = date('YmdH', $now);
        db_query('UPDATE {mailarchive_statistics} SET count = count + 1 WHERE date = %d AND mid = %d AND sid = %d', $date, $mid, $sid);
        if (!db_affected_rows()) {
          $year = date('Y', $now);
          $month = date('n', $now);
          $day = date('j', $now);
          // Column doesn't exist, so we add it.
          db_query('INSERT INTO {mailarchive_statistics} (mid, date, count, sid, year, month, day) VALUES(%d, %d, 1, %d, %d, %d, %d)', $mid, $date, $sid, $year, $month, $day);
          if (!db_affected_rows()) {
            // It seems someone else viewed this message at the same time we
            // did and created the necessary database row.  We still need to
            // increment the counter so our view doesn't get lost by this race
            // condition.
            db_query('UPDATE {mailarchive_statistics} SET count = count + 1 WHERE date = %d AND mid = %d AND sid = %d', $date, $mid, $sid);
          }
        }
      }
    }
  }
}

/**
 * Implementation of Drupal's hook_menu().
 * Provide path for administrative statistics.
 */
function mailarchive_stats_menu($may_cache) {
  $items = array();

  if ($may_cache) {
    $items[] = array(
      'path' => 'admin/content/mailarchive/statistics',
      'title' => 'Statistics',
      'type' => MENU_LOCAL_TASK,
      'callback' => 'mailarchive_stats_admin_overview',
      'weight' => 8,
    );
  }

  return $items;
}

/**
 * Provide statistics overview.
 */
function mailarchive_stats_admin_overview() {
  $now = time();
  $year = date('Y', $now);
  $month = date('n', $now);
  $lastmonth = date('n', $now - 2678400);
  $day = date('j', $now);
  $yesterday = date('j', $now - 86400);
  $hour = date('YmdH', $now);
  $lasthour = date('YmdH', $now - 3600);

  $result = db_query('SELECT sid, nid, urlname, subscription_status, message_count, last_message FROM {mailarchive_subscriptions}');
  while ($subscription = db_fetch_object($result)) {
    // All time statistics.
    $statistics[$subscription->sid]['all'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE sid = %d AND count > 0 ORDER BY count DESC', $subscription->sid)));
    $statistics['all'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE count > 0 ORDER BY count DESC')));

    // Today's statistics.
    $statistics[$subscription->sid]['today'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE sid = %d AND year = %d AND month = %d AND day = %d AND count > 0 ORDER BY count DESC', $subscription->sid, $year, $month, $day)));
    $statistics['today'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE year = %d AND month = %d AND day = %d AND count > 0 ORDER BY count DESC', $year, $month, $day)));

    // Yesterday's statistics.
    $statistics[$subscription->sid]['yesterday'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE sid = %d AND year = %d AND month = %d AND day = %d AND count > 0 ORDER BY count DESC', $subscription->sid, $year, $month, $yesterday)));
    $statistics['yesterday'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE year = %d AND month = %d AND day = %d AND count > 0 ORDER BY count DESC', $year, $month, $yesterday)));

    // This month's statistics.
    $statistics[$subscription->sid]['month'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE sid = %d AND year = %d AND month = %d AND count > 0 ORDER BY count DESC', $subscription->sid, $year, $month)));
    $statistics['month'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE year = %d AND month = %d AND count > 0 ORDER BY count DESC', $year, $month)));

    // Last month's statistics.
    $statistics[$subscription->sid]['lastmonth'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE sid = %d AND year = %d AND month = %d AND count > 0 ORDER BY count DESC', $subscription->sid, $year, $lastmonth)));
    $statistics['lastmonth'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE year = %d AND month = %d AND count > 0 ORDER BY count DESC', $year, $lastmonth)));

    // This hour's statistics.
    $statistics[$subscription->sid]['hour'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE sid = %d AND date = %d AND count > 0 ORDER BY count DESC', $subscription->sid, $hour)));
    $statistics['hour'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE date = %d AND count > 0 ORDER BY count DESC', $hour)));

    // Last hour's statistics.
    $statistics[$subscription->sid]['lasthour'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE sid = %d AND date = %d AND count > 0 ORDER BY count DESC', $subscription->sid, $lasthour)));
    $statistics['lasthour'] = (int)(db_result(db_query('SELECT SUM(count) AS count FROM {mailarchive_statistics} WHERE date = %d AND count > 0 ORDER BY count DESC', $lasthour)));

    $statistics[$subscription->sid]['info'] = $subscription;
  }

  $headers = array(t('Mailing list'), t('This hour'), t('Last hour'), t('Today'), t('Yesterday'), t('This month'), t('Last month'), t('All time'));
  $rows = array();

  $rows[] = array(
    array('data' => t('<b>Total</b>')),
    array('data' => '<b>'. $statistics['hour'] .'</b>'),
    array('data' => '<b>'. $statistics['lasthour'] .'</b>'),
    array('data' => '<b>'. $statistics['today'] .'</b>'),
    array('data' => '<b>'. $statistics['yesterday'] .'</b>'),
    array('data' => '<b>'. $statistics['month'] .'</b>'),
    array('data' => '<b>'. $statistics['lastmonth'] .'</b>'),
    array('data' => '<b>'. $statistics['all'] .'</b>'),
  );
  foreach ($statistics as $stats) {
    if ($stats['all']) {
      $rows[] = array(
        array('data' => $stats['info']->urlname),
        array('data' => $stats['hour']),
        array('data' => $stats['lasthour']),
        array('data' => $stats['today']),
        array('data' => $stats['yesterday']),
        array('data' => $stats['month']),
        array('data' => $stats['lastmonth']),
        array('data' => $stats['all']),
      );
    }
  }

  return theme('box', t('Statistics'), theme('table', $headers, $rows));
}
